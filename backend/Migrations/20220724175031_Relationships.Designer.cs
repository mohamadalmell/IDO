// <auto-generated />
using System;
using IdoApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IDO.Migrations
{
    [DbContext(typeof(IdoContext))]
    [Migration("20220724175031_Relationships")]
    partial class Relationships
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("IdoApi.Models.Admin", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Avatar")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("IdoApi.Models.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("IdoApi.Models.Item", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Categoryid")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Estimate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Priorityid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Statusid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("Categoryid");

                    b.HasIndex("Priorityid");

                    b.HasIndex("Statusid");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("IdoApi.Models.Priority", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Priorities");
                });

            modelBuilder.Entity("IdoApi.Models.Status", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("IdoApi.Models.Item", b =>
                {
                    b.HasOne("IdoApi.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("Categoryid");

                    b.HasOne("IdoApi.Models.Priority", "Priority")
                        .WithMany()
                        .HasForeignKey("Priorityid");

                    b.HasOne("IdoApi.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("Statusid");

                    b.Navigation("Category");

                    b.Navigation("Priority");

                    b.Navigation("Status");
                });
#pragma warning restore 612, 618
        }
    }
}
